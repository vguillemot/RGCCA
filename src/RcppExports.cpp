// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// LDLTsolver_new
Rcpp::XPtr<Eigen::SimplicialLDLT<Eigen::SparseMatrix<double>>> LDLTsolver_new();
RcppExport SEXP _RGCCA_LDLTsolver_new() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(LDLTsolver_new());
    return rcpp_result_gen;
END_RCPP
}
// LDLTsolver_compute
void LDLTsolver_compute(Rcpp::XPtr<Eigen::SimplicialLDLT<Eigen::SparseMatrix<double>>> ptr, const Eigen::SparseMatrix<double>& L);
RcppExport SEXP _RGCCA_LDLTsolver_compute(SEXP ptrSEXP, SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<Eigen::SimplicialLDLT<Eigen::SparseMatrix<double>>> >::type ptr(ptrSEXP);
    Rcpp::traits::input_parameter< const Eigen::SparseMatrix<double>& >::type L(LSEXP);
    LDLTsolver_compute(ptr, L);
    return R_NilValue;
END_RCPP
}
// LDLTsolver_solve
Eigen::VectorXd LDLTsolver_solve(Rcpp::XPtr<Eigen::SimplicialLDLT<Eigen::SparseMatrix<double>>> ptr, const Eigen::VectorXd& b);
RcppExport SEXP _RGCCA_LDLTsolver_solve(SEXP ptrSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<Eigen::SimplicialLDLT<Eigen::SparseMatrix<double>>> >::type ptr(ptrSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(LDLTsolver_solve(ptr, b));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RGCCA_LDLTsolver_new", (DL_FUNC) &_RGCCA_LDLTsolver_new, 0},
    {"_RGCCA_LDLTsolver_compute", (DL_FUNC) &_RGCCA_LDLTsolver_compute, 2},
    {"_RGCCA_LDLTsolver_solve", (DL_FUNC) &_RGCCA_LDLTsolver_solve, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_RGCCA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
